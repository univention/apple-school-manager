#!/usr/bin/python2.7
# -*- coding: utf-8 -*-
#
# Copyright 2018 Univention GmbH
#
# http://www.univention.de/
#
# All rights reserved.
#
# The source code of this program is made available
# under the terms of the GNU Affero General Public License version 3
# (GNU AGPL V3) as published by the Free Software Foundation.
#
# Binary versions of this program provided by Univention to you as
# well as other copyrighted, protected or trademarked materials like
# Logos, graphics, fonts, specific documentations and configurations,
# cryptographic keys etc. are subject to a license agreement between
# you and Univention and not subject to the GNU AGPL V3.
#
# In the case you use this program under the terms of the GNU AGPL V3,
# the program is provided in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public
# License with the Debian GNU/Linux or Univention distribution in file
# /usr/share/common-licenses/AGPL-3; if not, see
# <http://www.gnu.org/licenses/>.

from univention.asm.asm_upload import ASMUpload
from univention.config_registry import ConfigRegistry


class ASMCredentialError(Exception):
	pass


def get_config():
	ucr = ConfigRegistry()
	ucr.load()
	ucr_username_key = "asm/username"
	ucr_ou_whitelist_key = "asm/school_whitelist"
	with open("/etc/asm.secret", 'r') as passwordFile:
		password = passwordFile.read().strip("\n")
	username = ucr[ucr_username_key]
	whitelist = ucr[ucr_ou_whitelist_key]
	if whitelist is not None:
		whitelist = [school.strip(" ") for school in whitelist.split(",") if school]
	if not username:
		raise ASMCredentialError("Please set a username in the app settings")
	if not password:
		raise ASMCredentialError("Please set a passwrod in the app settings")
	return (username, password, whitelist)


def main():
	config = get_config()
	asmUpload = ASMUpload(*config)
	asmUpload.upload()


if __name__ == '__main__':
	main()
