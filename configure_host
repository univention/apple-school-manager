#!/usr/bin/python2.7
# -*- coding: utf-8 -*-
#
# Copyright 2018 Univention GmbH
#
# http://www.univention.de/
#
# All rights reserved.
#
# The source code of this program is made available
# under the terms of the GNU Affero General Public License version 3
# (GNU AGPL V3) as published by the Free Software Foundation.
#
# Binary versions of this program provided by Univention to you as
# well as other copyrighted, protected or trademarked materials like
# Logos, graphics, fonts, specific documentations and configurations,
# cryptographic keys etc. are subject to a license agreement between
# you and Univention and not subject to the GNU AGPL V3.
#
# In the case you use this program under the terms of the GNU AGPL V3,
# the program is provided in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public
# License with the Debian GNU/Linux or Univention distribution in file
# /usr/share/common-licenses/AGPL-3; if not, see
# <http://www.gnu.org/licenses/>.

import logging
import subprocess
import sys
from univention.config_registry import ConfigRegistry


def main():
	configureASM = ConfigureASM()
	configureASM.configure()


class ConfigureASMError(Exception):
	pass


class ConfigureASM(object):

	def __init__(self):
		self.ucr = ConfigRegistry()
		self.ucr.load()
		self.logger = logging.getLogger(__name__)

	def configure(self):
		if self.ucr.is_true("asm/run_on_appsetting_save") and "settings" in sys.argv:
			self.upload_to_asm()
		if self.ucr.is_true("asm/sync_daily"):
			try:
				self.check_hour()
			except ConfigureASMError:
				self.logger.critical("Please use a valid hour for the daily asm sync (0-23).")

	def upload_to_asm(self):
		self.logger.info("Start ASM upload")
		try:
			subprocess.check_call(["/usr/sbin/asm-upload"])
		except subprocess.CalledProcessError:
			self.logger.error("ASM upload failed, see /var/log/univention/asm.log")
		else:
			self.logger.info("ASM upload done")

	def check_hour(self):
		hour = self.ucr["asm/sync_daily/hour"]
		if hour is None or int(hour) < 0 or int(hour) > 23:
			raise ConfigureASMError("Invalid hour for cron job")


if __name__ == "__main__":
	main()
